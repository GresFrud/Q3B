(set-info :smt-lib-version 2.6)
(set-logic BV)
(set-info :source |
Generated by the tool Ultimate Automizer [1,2] which implements 
an automata theoretic approach [3] to software verification.

This SMT script belongs to a set of SMT scripts that was generated by 
applying Ultimate Automizer to benchmarks [4] from the SV-COMP 2017 [5,6].

This script might _not_ contain all SMT commands that are used by 
Ultimate Automizer. In order to satisfy the restrictions of
the SMT-COMP we have to drop e.g., the commands for getting
values (resp. models), unsatisfiable cores and interpolants.

2017-05-01, Matthias Heizmann (heizmann@informatik.uni-freiburg.de)


[1] https://ultimate.informatik.uni-freiburg.de/automizer/
[2] Matthias Heizmann, Yu-Wen Chen, Daniel Dietsch, Marius Greitschus, 
Alexander Nutz, Betim Musa, Claus Schätzle, Christian Schilling, 
Frank Schüssele, Andreas Podelski:
Ultimate Automizer with an On-Demand Construction of Floyd-Hoare 
Automata - (Competition Contribution). TACAS (2) 2017: 394-398
[3] Matthias Heizmann, Jochen Hoenicke, Andreas Podelski: Software Model 
Checking for People Who Love Automata. CAV 2013:36-52
[4] https://github.com/sosy-lab/sv-benchmarks
[5] Dirk Beyer: Software Verification with Validation of Results - 
(Report on SV-COMP 2017). TACAS (2) 2017: 331-349
[6] https://sv-comp.sosy-lab.org/2017/
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun main_~sn~6_const_1701953089 () (_ BitVec 64))
(declare-fun main_~gauss~6_const_-911142799 () (_ BitVec 64))
(declare-fun main_~i~6_const_-993890350 () (_ BitVec 32))
(declare-fun main_~n~6_const_-993918699 () (_ BitVec 32))
(assert (or (forall ((main_~n~6 (_ BitVec 32))) (or (= (bvudiv (bvmul ((_ zero_extend 32) main_~n~6) (bvadd ((_ zero_extend 32) main_~n~6) (_ bv1 64))) (_ bv2 64)) (bvadd main_~sn~6_const_1701953089 ((_ zero_extend 32) (bvadd main_~i~6_const_-993890350 (_ bv1 32))))) (not (bvule (bvadd main_~i~6_const_-993890350 (_ bv1 32)) main_~n~6)) (bvule (bvadd main_~i~6_const_-993890350 (_ bv2 32)) main_~n~6))) (= ((_ sign_extend 32) (_ bv0 32)) (bvadd main_~sn~6_const_1701953089 ((_ zero_extend 32) (bvadd main_~i~6_const_-993890350 (_ bv1 32)))))))
(assert (or (= ((_ sign_extend 32) (_ bv0 32)) main_~sn~6_const_1701953089) (= (bvudiv (bvmul ((_ zero_extend 32) main_~n~6_const_-993918699) (bvadd ((_ zero_extend 32) main_~n~6_const_-993918699) (_ bv1 64))) (_ bv2 64)) main_~sn~6_const_1701953089)))
(assert (or (= ((_ sign_extend 32) (_ bv0 32)) main_~sn~6_const_1701953089) (= main_~sn~6_const_1701953089 main_~gauss~6_const_-911142799)))
(assert (forall ((main_~n~6 (_ BitVec 32))) (or (not (bvule main_~i~6_const_-993890350 main_~n~6)) (= (bvudiv (bvmul ((_ zero_extend 32) main_~n~6) (bvadd ((_ zero_extend 32) main_~n~6) (_ bv1 64))) (_ bv2 64)) (bvadd main_~sn~6_const_1701953089 ((_ zero_extend 32) main_~i~6_const_-993890350))) (bvule (bvadd main_~i~6_const_-993890350 (_ bv1 32)) main_~n~6))))
(assert (not (= (bvadd (bvadd main_~sn~6_const_1701953089 ((_ zero_extend 32) main_~i~6_const_-993890350)) ((_ zero_extend 32) (bvadd main_~i~6_const_-993890350 (_ bv1 32)))) ((_ sign_extend 32) (_ bv0 32)))))
(assert (not (forall ((main_~n~6 (_ BitVec 32))) (or (= (bvudiv (bvmul ((_ zero_extend 32) main_~n~6) (bvadd ((_ zero_extend 32) main_~n~6) (_ bv1 64))) (_ bv2 64)) (bvadd (bvadd main_~sn~6_const_1701953089 ((_ zero_extend 32) main_~i~6_const_-993890350)) ((_ zero_extend 32) (bvadd main_~i~6_const_-993890350 (_ bv1 32))))) (not (bvule (bvadd main_~i~6_const_-993890350 (_ bv1 32)) main_~n~6)) (bvule (bvadd main_~i~6_const_-993890350 (_ bv2 32)) main_~n~6)))))
(check-sat)
(exit)
